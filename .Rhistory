data$date_time<-with(data,paste(Date,Time,sep=" "))
data$date_time<- strptime(data$date_time, format="%d/%m/%Y %H:%M:%S")
par(mfrow=c(3,2),mar=c(1,1,1,1))
with(data, {plot(data$date_time,data$Global_active_power, col="white", ylab="Global Active Power (Kilowatts)", xlab = " ")
lines(data$date_time,data$Global_active_power)
plot(data$date_time,data$Voltage, col="white", ylab="Voltage", xlab = "datetime")
lines(data$date_time,data$Voltage)
with(data,plot(data$date_time,data$Sub_metering_1,type="n"))
with(data,plot(data$date_time,data$Sub_metering_1,type="n",ylab="Energy sub metering",xlab=" "))
with(data, lines(data$date_time,data$Sub_metering_1, col="black"))
with(data, lines(data$date_time,data$Sub_metering_2, col="red"))
with(data, lines(data$date_time,data$Sub_metering_3, col="blue"))
legend("topright",legend=c("Sub_metering_1","Sun_metering_2","Submetering_3"),col=c("black","red","blue"),lty="solid")
plot(data$date_time,data$Global_reactive_power, col="white", ylab="Global_reactive_power", xlab = "datetime")
lines(data$date_time,data$Global_reactive_power)
})
data<-read.csv('household_power_consumption1.csv')
data$date_time<-with(data,paste(Date,Time,sep=" "))
data$date_time<- strptime(data$date_time, format="%d/%m/%Y %H:%M:%S")
par(mfrow=c(3,2),mar=c(1,1,1,1))
with(data, {plot(data$date_time,data$Global_active_power, col="white", ylab="Global Active Power (Kilowatts)", xlab = " ")
lines(data$date_time,data$Global_active_power)
with(data,{plot(data$date_time,data$Voltage, col="white", ylab="Voltage", xlab = "datetime")
lines(data$date_time,data$Voltage)})
with(data,plot(data$date_time,data$Sub_metering_1,type="n"))
with(data,plot(data$date_time,data$Sub_metering_1,type="n",ylab="Energy sub metering",xlab=" "))
with(data, lines(data$date_time,data$Sub_metering_1, col="black"))
with(data, lines(data$date_time,data$Sub_metering_2, col="red"))
with(data, lines(data$date_time,data$Sub_metering_3, col="blue"))
legend("topright",legend=c("Sub_metering_1","Sun_metering_2","Submetering_3"),col=c("black","red","blue"),lty="solid")
with(data,{plot(data$date_time,data$Global_reactive_power, col="white", ylab="Global_reactive_power", xlab = "datetime")
lines(data$date_time,data$Global_reactive_power)})
})
data<-read.csv('household_power_consumption1.csv')
data$date_time<-with(data,paste(Date,Time,sep=" "))
data$date_time<- strptime(data$date_time, format="%d/%m/%Y %H:%M:%S")
par(mfrow=c(3,2),mar=c(1,1,1,1))
with(data, {plot(data$date_time,data$Global_active_power, col="white", ylab="Global Active Power (Kilowatts)", xlab = " ")
lines(data$date_time,data$Global_active_power)
with(data,{plot(data$date_time,data$Voltage, col="white", ylab="Voltage", xlab = "datetime")
lines(data$date_time,data$Voltage)})
with(data,{plot(data$date_time,data$Sub_metering_1,type="n")
plot(data$date_time,data$Sub_metering_1,type="n",ylab="Energy sub metering",xlab=" ")
lines(data$date_time,data$Sub_metering_1, col="black")
lines(data$date_time,data$Sub_metering_2, col="red")
lines(data$date_time,data$Sub_metering_3, col="blue")
legend("topright",legend=c("Sub_metering_1","Sun_metering_2","Submetering_3"),col=c("black","red","blue"),lty="solid")}
with(data,{plot(data$date_time,data$Global_reactive_power, col="white", ylab="Global_reactive_power", xlab = "datetime")
lines(data$date_time,data$Global_reactive_power)})
})
data<-read.csv('household_power_consumption1.csv')
data$date_time<-with(data,paste(Date,Time,sep=" "))
data$date_time<- strptime(data$date_time, format="%d/%m/%Y %H:%M:%S")
par(mfrow=c(3,2),mar=c(1,1,1,1))
with(data, {plot(data$date_time,data$Global_active_power, col="white", ylab="Global Active Power (Kilowatts)", xlab = " ")
lines(data$date_time,data$Global_active_power)
with(data,plot(data$date_time,data$Voltage, col="white", ylab="Voltage", xlab = "datetime")
lines(data$date_time,data$Voltage))
plot(data$date_time,data$Sub_metering_1,type="n",ylab="Energy sub metering",xlab=" ")
lines(data$date_time,data$Sub_metering_1, col="black")
lines(data$date_time,data$Sub_metering_2, col="red")
lines(data$date_time,data$Sub_metering_3, col="blue")
legend("topright",legend=c("Sub_metering_1","Sun_metering_2","Submetering_3"),col=c("black","red","blue"),lty="solid")}
with(data,plot(data$date_time,data$Global_reactive_power, col="white", ylab="Global_reactive_power", xlab = "datetime")
lines(data$date_time,data$Global_reactive_power))
})
data<-read.csv('household_power_consumption1.csv')
data$date_time<-with(data,paste(Date,Time,sep=" "))
data$date_time<- strptime(data$date_time, format="%d/%m/%Y %H:%M:%S")
par(mfrow=c(3,2),mar=c(1,1,1,1))
with(data, {plot(data$date_time,data$Global_active_power, col="white", ylab="Global Active Power (Kilowatts)", xlab = " ")
lines(data$date_time,data$Global_active_power)
with(data,plot(data$date_time,data$Voltage, col="white", ylab="Voltage", xlab = "datetime")
lines(data$date_time,data$Voltage))
plot(data$date_time,data$Sub_metering_1,type="n",ylab="Energy sub metering",xlab=" ")
lines(data$date_time,data$Sub_metering_1, col="black")
lines(data$date_time,data$Sub_metering_2, col="red")
lines(data$date_time,data$Sub_metering_3, col="blue")
legend("topright",legend=c("Sub_metering_1","Sun_metering_2","Submetering_3"),col=c("black","red","blue"),lty="solid")
with(data,plot(data$date_time,data$Global_reactive_power, col="white", ylab="Global_reactive_power", xlab = "datetime")
lines(data$date_time,data$Global_reactive_power))
})
data<-read.csv('household_power_consumption1.csv')
data$date_time<-with(data,paste(Date,Time,sep=" "))
data$date_time<- strptime(data$date_time, format="%d/%m/%Y %H:%M:%S")
par(mfrow=c(2,2),mar=c(1,1,1,1))
with(data, {plot(data$date_time,data$Global_active_power, col="white", ylab="Global Active Power (Kilowatts)", xlab = " ")
lines(data$date_time,data$Global_active_power)
with(data,plot(data$date_time,data$Voltage, col="white", ylab="Voltage", xlab = "datetime")
lines(data$date_time,data$Voltage))
with(data,plot(data$date_time,data$Sub_metering_1,type="n",ylab="Energy sub metering",xlab=" "))
lines(data$date_time,data$Sub_metering_1, col="black")
lines(data$date_time,data$Sub_metering_2, col="red")
lines(data$date_time,data$Sub_metering_3, col="blue")
legend("topright",legend=c("Sub_metering_1","Sun_metering_2","Submetering_3"),col=c("black","red","blue"),lty="solid")
with(data,plot(data$date_time,data$Global_reactive_power, col="white", ylab="Global_reactive_power", xlab = "datetime")
lines(data$date_time,data$Global_reactive_power)
})
data<-read.csv('household_power_consumption1.csv')
data$date_time<-with(data,paste(Date,Time,sep=" "))
data$date_time<- strptime(data$date_time, format="%d/%m/%Y %H:%M:%S")
par(mfrow=c(2,2))
with(data, {plot(data$date_time,data$Global_active_power, col="white", ylab="Global Active Power (Kilowatts)", xlab = " ")
lines(data$date_time,data$Global_active_power)
plot(data$date_time,data$Voltage, col="white", ylab="Voltage", xlab = "datetime")
lines(data$date_time,data$Voltage)
with(data,plot(data$date_time,data$Sub_metering_1,type="n",ylab="Energy sub metering",xlab=" "))
with(data, lines(data$date_time,data$Sub_metering_1, col="black"))
with(data, lines(data$date_time,data$Sub_metering_2, col="red"))
with(data, lines(data$date_time,data$Sub_metering_3, col="blue"))
legend("topright",legend=c("Sub_metering_1","Sun_metering_2","Submetering_3"),col=c("black","red","blue"),lty="solid")
plot(data$date_time,data$Global_reactive_power, col="white", ylab="Global_reactive_power", xlab = "datetime")
lines(data$date_time,data$Global_reactive_power)
})
dev.copy(png,file="plot4.png")
dev.off()
data<-read.csv('household_power_consumption1.csv')
data$date_time<-with(data,paste(Date,Time,sep=" "))
data$date_time<- strptime(data$date_time, format="%d/%m/%Y %H:%M:%S")
par(mfrow=c(2,2), mar=c(3,3,3,3))
with(data, {plot(data$date_time,data$Global_active_power, col="white", ylab="Global Active Power (Kilowatts)", xlab = " ")
lines(data$date_time,data$Global_active_power)
plot(data$date_time,data$Voltage, col="white", ylab="Voltage", xlab = "datetime")
lines(data$date_time,data$Voltage)
with(data,plot(data$date_time,data$Sub_metering_1,type="n",ylab="Energy sub metering",xlab=" "))
with(data, lines(data$date_time,data$Sub_metering_1, col="black"))
with(data, lines(data$date_time,data$Sub_metering_2, col="red"))
with(data, lines(data$date_time,data$Sub_metering_3, col="blue"))
legend("topright",legend=c("Sub_metering_1","Sun_metering_2","Submetering_3"),col=c("black","red","blue"),lty="solid")
plot(data$date_time,data$Global_reactive_power, col="white", ylab="Global_reactive_power", xlab = "datetime")
lines(data$date_time,data$Global_reactive_power)
})
dev.copy(png,file="plot4.png")
dev.off()
data<-read.csv('household_power_consumption1.csv')
data$date_time<-with(data,paste(Date,Time,sep=" "))
data$date_time<- strptime(data$date_time, format="%d/%m/%Y %H:%M:%S")
par(mfrow=c(2,2), mar=c(3,3,3,3))
with(data, {plot(data$date_time,data$Global_active_power, col="white", ylab="Global Active Power (Kilowatts)", xlab = " ")
lines(data$date_time,data$Global_active_power)
plot(data$date_time,data$Voltage, col="white", ylab="Voltage", xlab = "datetime")
lines(data$date_time,data$Voltage)
with(data,plot(data$date_time,data$Sub_metering_1,type="n",ylab="Energy sub metering",xlab=" "))
with(data, lines(data$date_time,data$Sub_metering_1, col="black"))
with(data, lines(data$date_time,data$Sub_metering_2, col="red"))
with(data, lines(data$date_time,data$Sub_metering_3, col="blue"))
legend("topright",legend=c("Sub_metering_1","Sun_metering_2","Submetering_3"),col=c("black","red","blue"),lty="solid")
plot(data$date_time,data$Global_reactive_power, col="white", ylab="Global_reactive_power", xlab = "datetime")
lines(data$date_time,data$Global_reactive_power)
})
dev.copy(png,file="plot4.png")
dev.off()
?legend
data<-read.csv('household_power_consumption1.csv')
data$date_time<-with(data,paste(Date,Time,sep=" "))
data$date_time<- strptime(data$date_time, format="%d/%m/%Y %H:%M:%S")
par(mfrow=c(2,2), mar=c(3,3,3,3))
with(data, {plot(data$date_time,data$Global_active_power, col="white", ylab="Global Active Power (Kilowatts)", xlab = " ")
lines(data$date_time,data$Global_active_power)
plot(data$date_time,data$Voltage, col="white", ylab="Voltage", xlab = "datetime")
lines(data$date_time,data$Voltage)
with(data,plot(data$date_time,data$Sub_metering_1,type="n",ylab="Energy sub metering",xlab=" "))
with(data, lines(data$date_time,data$Sub_metering_1, col="black"))
with(data, lines(data$date_time,data$Sub_metering_2, col="red"))
with(data, lines(data$date_time,data$Sub_metering_3, col="blue"))
legend("topright",legend=c("Sub_metering_1","Sun_metering_2","Submetering_3"),col=c("black","red","blue"),cex=0.3,lty="solid")
plot(data$date_time,data$Global_reactive_power, col="white", ylab="Global_reactive_power", xlab = "datetime")
lines(data$date_time,data$Global_reactive_power)
})
dev.copy(png,file="plot4.png")
dev.off()
data<-read.csv('household_power_consumption1.csv')
data$date_time<-with(data,paste(Date,Time,sep=" "))
data$date_time<- strptime(data$date_time, format="%d/%m/%Y %H:%M:%S")
par(mfrow=c(2,2), rep(2,4))
with(data, {plot(data$date_time,data$Global_active_power, col="white", ylab="Global Active Power (Kilowatts)", xlab = " ")
lines(data$date_time,data$Global_active_power)
plot(data$date_time,data$Voltage, col="white", ylab="Voltage", xlab = "datetime")
lines(data$date_time,data$Voltage)
with(data,plot(data$date_time,data$Sub_metering_1,type="n",ylab="Energy sub metering",xlab=" "))
with(data, lines(data$date_time,data$Sub_metering_1, col="black"))
with(data, lines(data$date_time,data$Sub_metering_2, col="red"))
with(data, lines(data$date_time,data$Sub_metering_3, col="blue"))
legend("topright",legend=c("Sub_metering_1","Sun_metering_2","Submetering_3"),col=c("black","red","blue"),cex=0.3,lty="solid")
plot(data$date_time,data$Global_reactive_power, col="white", ylab="Global_reactive_power", xlab = "datetime")
lines(data$date_time,data$Global_reactive_power)
})
dev.copy(png,file="plot4.png")
dev.off()
data<-read.csv('household_power_consumption1.csv')
data$date_time<-with(data,paste(Date,Time,sep=" "))
data$date_time<- strptime(data$date_time, format="%d/%m/%Y %H:%M:%S")
par(mfrow=c(2,2), mar=rep(4,4))
with(data, {plot(data$date_time,data$Global_active_power, col="white", ylab="Global Active Power (Kilowatts)", xlab = " ")
lines(data$date_time,data$Global_active_power)
plot(data$date_time,data$Voltage, col="white", ylab="Voltage", xlab = "datetime")
lines(data$date_time,data$Voltage)
with(data,plot(data$date_time,data$Sub_metering_1,type="n",ylab="Energy sub metering",xlab=" "))
with(data, lines(data$date_time,data$Sub_metering_1, col="black"))
with(data, lines(data$date_time,data$Sub_metering_2, col="red"))
with(data, lines(data$date_time,data$Sub_metering_3, col="blue"))
legend("topright",legend=c("Sub_metering_1","Sun_metering_2","Submetering_3"),col=c("black","red","blue"),cex=0.3,lty="solid")
plot(data$date_time,data$Global_reactive_power, col="white", ylab="Global_reactive_power", xlab = "datetime")
lines(data$date_time,data$Global_reactive_power)
})
dev.copy(png,file="plot4.png")
dev.off()
data<-read.csv('household_power_consumption1.csv')
data$date_time<-with(data,paste(Date,Time,sep=" "))
data$date_time<- strptime(data$date_time, format="%d/%m/%Y %H:%M:%S")
par(mfrow=c(2,2), mar=rep(4,4))
with(data, {plot(data$date_time,data$Global_active_power, col="white", ylab="Global Active Power (Kilowatts)", xlab = " ")
lines(data$date_time,data$Global_active_power)
plot(data$date_time,data$Voltage, col="white", ylab="Voltage", xlab = "datetime")
lines(data$date_time,data$Voltage)
with(data,plot(data$date_time,data$Sub_metering_1,type="n",ylab="Energy sub metering",xlab=" "))
with(data, lines(data$date_time,data$Sub_metering_1, col="black"))
with(data, lines(data$date_time,data$Sub_metering_2, col="red"))
with(data, lines(data$date_time,data$Sub_metering_3, col="blue"))
legend("topright",legend=c("Sub_metering_1","Sun_metering_2","Submetering_3"),col=c("black","red","blue"),cex=0.3,lty="solid")
plot(data$date_time,data$Global_reactive_power, col="white", ylab="Global_reactive_power", xlab = "datetime")
lines(data$date_time,data$Global_reactive_power)
})
dev.copy(png,file="plot4.png")
dev.off()
library(swirl)
swirl()
swirl()
getwd
getwd()
setwd("/Users/adrienrouget/Documents/Cours/R directory/swirl_courses")
swirl()
setwd("/Users/adrienrouget/Documents/Cours/R directory")
import_from_swirl('Data Analysis')
install_from_swirl('Data Analysis')
swirl()
cars
dataset$mpgCity
cars$mpgCity
myMPG<-cars$mpgCity
mean(myMPG)
median(myMPG)
table(myMPG)
19
range(cars$price)
54.5
var(cars$price)
sd(cars$price)
20
10
25
4
summary(cars$price)
install_from_swirl(Getting and Cleaning Data)
install_from_swirl("Getting and Cleaning Data")
swirl()
mydf<-read.csv(path2csv, stringsAsFactors = FALSE)
dim(mydf)
head(mydf)
library(dplyr)
packageVersion("dplyr")
cran<-tbl_df(mydf)
rm("mydf")
cran
?select
select(cran, ip_id, package, country)
5:20
select(cran, r_arch:country)
select(cran, country:r_arch)
cran
select(cran, -time)
-5:20
-(5:20)
select(cran, -(X:size))
filter(cran, package=="swirl")
filter(cran, r_version=="3.1.1", country=="US")
?Comparison
filter(cran, r_version<="3.0.1", country=="IN")
filter(cran, r_version<="3.0.2", country=="IN")
filter(cran, country == "US" | country == "IN")
filter(cran, r_os =="linux-gnu" & size > "100500")
filter(cran, r_os =="linux-gnu",size > 100500)
is.na(c(3,5,NA,10))
!is.na(c(3,5,NA,10))
filter(cran,!is.na(r_version))
cran2<-select(cran,size:ip_id)
arrange(cran2, ip_id)
arrange(cran2, desc(ip_id))
arrange(cran2,
| package, ip_id)
arrange(cran2,
package, ip_id)
arrange(cran2, country, desc(r_version), ip_id)
cran3<-select(cran,ip_id, package, size)
cran3
mutate(cran3, size_mb=size/2^20)
mutate(cran3, size_mb=size/2^20, size_gb=size_mb/2^10)
mutate(cran3, correct_size=size+1000)
summarize(cran3, avg_bytes=mean(size))
summarize(cran, avg_bytes=mean(size))
swirl()
library(dplyr)
cran<-tbl_df(mydf)
rm("mydf")
cran
?group_by()
?group_by
group_by(cran,.by_package)
group_by(cran,by_package)
by_package<-group_by(cran, package)
by_package
summarize(by_package, mean(size))
submit()
pack_sum
data<-read.csv('household_power_consumption1.csv')
data$date_time<-with(data,paste(Date,Time,sep=" "))
data$date_time<- strptime(data$date_time, format="%d/%m/%Y %H:%M:%S")
par(mfrow=c(2,2), mar=rep(4,4))
with(data, {plot(data$date_time,data$Global_active_power, col="white", ylab="Global Active Power (Kilowatts)", xlab = " ")
lines(data$date_time,data$Global_active_power)
plot(data$date_time,data$Voltage, col="white", ylab="Voltage", xlab = "datetime")
lines(data$date_time,data$Voltage)
with(data,plot(data$date_time,data$Sub_metering_1,type="n",ylab="Energy sub metering",xlab=" "))
with(data, lines(data$date_time,data$Sub_metering_1, col="black"))
with(data, lines(data$date_time,data$Sub_metering_2, col="red"))
with(data, lines(data$date_time,data$Sub_metering_3, col="blue"))
legend("topright",legend=c("Sub_metering_1","Sun_metering_2","Submetering_3"),col=c("black","red","blue"),cex=0.3,lty="solid")
plot(data$date_time,data$Global_reactive_power, col="white", ylab="Global_reactive_power", xlab = "datetime")
lines(data$date_time,data$Global_reactive_power)
})
dev.copy(png,file="plot4.png")
dev.off()
library(lattice)
?"lattice"
library(nlme)
xyplot(weight ~ Time | Diet, BodyWeight)
install.packages("ggplot2")
library(ggplot2)
library(datasets)
data("airquality")
str(airquality)
airquality=transform(airquality, Month=factor(Month))
str(airquality)
qplot(Wind, Ozone, data = airquality, facets = .~Month)
library(swirl)
swirl()
install_from_swirl("Exploratory Data Analysis")
swirl()
install.packages("RMySQL")
install.packages("httr")
con<-url('http://biostat.jhsph.edu/~jleek/contact.html ')
code<-readLines(con)
close(con)
code
library(httr)
conn<-GET('http://biostat.jhsph.edu/~jleek/contact.html ')
content2<-content(conn, as='text')
?htmlparse
??htmlparse
head(content2)
library(XML)
doc<-htmlTreeParse(content2, useInternal=TRUE)
head(doc)
doc
doc[1]
rootnode<-xmlRoot(doc)
xmlname(rootnode)
xmlName(rootnode)
xpathApply(rootNode, "//hr", xmlValue)
xpathApply(rootnode, "//hr", xmlValue)
a<-xpathApply(rootnode, "//hr", xmlValue)
a
a<-xpathApply(rootnode, "//<hr>)", xmlValue)
rootnode
a<-xpathApply(rootnode, "//h1)", xmlValue)
a<-xpathApply(rootnode, "//h1", xmlValue)
a
a<-xpathApply(rootnode, "//br", xmlValue)
a
conn<-GET('http://biostat.jhsph.edu/~jleek/contact.html ')
content2<-content(conn, as='text')
doc<-htmlTreeParse(content2, useInternal=TRUE)
rootnode<-xmlRoot(doc)
rootnode
a<-xpathApply(rootnode, "//br", xmlValue)
a
?rootnode
rootnode
rootnode[1]
?nchar
nchar(rootnode)
a<-read.fwf('getdata-wksst8110.for')
a<-read.fwf('getdata-wksst8110.for', widths=c(2))
a
a<-read.fwf('getdata-wksst8110.for', widths=c(5))
head(a)
a<-read.fwf('getdata-wksst8110.for', widths=c(-34,3))
head(a)
a<-read.fwf('getdata-wksst8110.for', widths=c(-33,2))
head(a)
a<-read.fwf('getdata-wksst8110.for', widths=c(-33,3))
head(a)
a[4]
a[4,3]
a[6,3]
a
sum(a)
type(a)
?a
?type
typeof(a)
?list
a(1)
as.vector(a)
a[1]
a[5]
typeof(a)
a<-as.vector(a)
typeof(a)
a[1]
sum(a)
typeof(a)
?as.vector
a[[5]]
a[[1,2]]
typeof(a)
a[[1,1]]
a<-read.fwf('getdata-wksst8110.for', widths=c(-33,3))
head(a)
a<-read.fwf('getdata-wksst8110.for', widths=c(-33,3), skip=4)
head(a)
typeof(a)
a[1]
as.vector(a)
b<-as.vector(a)
typeof(b)
a<-read.fwf('getdata-wksst8110.for', widths=2,c(-33,3), skip=4)
?list
?lists
a[2]
View(a)
View(a)
a<-read.fwf('getdata-wksst8110.for', widths=2,c(-28,3), skip=4)
a<-read.fwf('getdata-wksst8110.for', widths=c(-28,3), skip=4)
a[V1]
a$V1
sum(a$V1)
type.convert(a$V1)
a<-read.fwf('getdata-wksst8110.for', widths=c(-28,4), skip=4)
sum(a$V1)
getwd()
setwd('./Getting_Data')
#create data frame with features names
features<-read.table('features.txt')
#Create X_train data frame with features names as labels
train<-read.table('X_train.txt', col.names = features[,2])
#Create X_test data frame with features names as labels
test<-read.table('X_test.txt', col.names = features[,2])
#Merge the two dataframes
X_all<-rbind(train,test)
#Create Y_train data frame with activity as label
label_train<-read.table('Y_train.txt', col.names=c('Activity'))
#Create Y_test data frame with activity as label
label_test<-read.table('Y_test.txt', col.names=c('Activity'))
#Merge the two dataframes
Y_all<-rbind(label_train,label_test)
#Read training and test set subject tables
subject_train<-read.table('subject_train.txt',col.names=c('Subject'))
subject_test<-read.table('subject_test.txt',col.names=c('Subject'))
#Merge the two dataframes
subjects<-rbind(subject_train,subject_test)
#Use descriptive activity names to name the activities
act_labels<-read.table('activity_labels.txt')
Y_all$Activity<-factor(Y_all$Activity,levels = act_labels[,1], labels=act_labels[,2])
#Create a logical vector (TRUE=variable name contains mean or std excluding meanFrequency)
indx<-grepl('mean',features[,2])
indx2<-grepl('std',features[,2])
indx3<-grepl('meanF',features[,2])
indx<-xor(indx,indx3)
indx<-indx|indx2
#Extracts only the mean and std measurements
X_all<-cbind(X_all[,indx])
#Give the variables descriptive activity names
names(X_all)<-gsub("^t","time",names(X_all))
names(X_all)<-gsub("^f","frequency",names(X_all))
names(X_all)<-gsub("Acc","Acceleration",names(X_all))
names(X_all)<-gsub("Gyro","Gyroscopic",names(X_all))
names(X_all)<-gsub("Mag","Magnitude",names(X_all))
#Merge the three dataframes
df<-cbind(subjects,Y_all,X_all)
str(df)
?aggregate
a<-list(ju,ki)
a<-list(2,3)
a
t<-aggregate(df,by=list(df$Subject,df$Activity),FUN=mean)
warnings()
str(df)
t<-aggregate(df[,3:68],by=list(df$Subject,df$Activity),FUN=mean)
head(t)
unique(df$Subject)
str(t)
t[,2]
t[1:2,1:2]
t[1:12,1:12]
t[1:12,1:2]
t<-aggregate(df[,3:68],by=c(df$Subject,df$Activity),FUN=mean)
t<-aggregate(df[,3:68],by=list(df$Subject,df$Activity),FUN=mean)
names(t)[1:2]<-c('Subject','Activity')
t[1:2,1:2]
write.table(t,file="tidy_data.txt")
write.table(t,file="tidy_data.txt",row.names = FALSE)
